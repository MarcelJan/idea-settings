<templateSet group="user">
  <template name="hrsolution" value="class Solution {&#10;    $type$ $name$;&#10;    &#10;    Solution($type$ $name$) {&#10;        this.$name$ = $name$;&#10;    }&#10;    &#10;    void write() {&#10;         System.out.println($name$$END$);&#10;    }    &#10;}" description="Solution" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="type" expression="" defaultValue="int" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="value" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="hrsolve" value="    static Solution solve($END$) {&#10;        &#10;    &#10;        return new Solution(...);&#10;    }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="nsc" value="Scanner scanner = new Scanner(System.in);&#10;$END$" description="Instantiate a scanner" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="format" value="String.format(&quot;$format$&quot;, $variable$)$END$" description="Format a String" toReformat="true" toShortenFQNames="true">
    <variable name="format" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="variable" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="F" value="$function$($SELECTION$)$END$" description="Surround with function call" toReformat="false" toShortenFQNames="true">
    <variable name="function" expression="" defaultValue="functionName" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importReact" value="import React from &quot;react&quot;;$END$" description="Import react into the current module" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="importPropTypes" value="import PropTypes from &quot;prop-types&quot;;$END$" description="Import PropTypes into the current module" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="importConnect" value="import {connect} from &quot;react-redux&quot;;$END$" description="Import connect into the current module" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="reactClass" value="import React from &quot;react&quot;;&#10;import PropTypes from &quot;prop-types&quot;;&#10;&#10;class $NAME$ extends React.Component {&#10;    render() {&#10;        return (&#10;          &lt;$END$/&gt;&#10;        );&#10;    }&#10;}&#10;&#10;$NAME$.propTypes = {&#10;};&#10;&#10;export default $NAME$;&#10;" description="Create and export a react component based on the current filename" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="d" value="android.util.Log.i(&quot;DEBUG_$CLASS_NAME$&quot;, $END$$SELECTION$);" description="Surround with android log" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="psts" value="public String toString() {&#10;    return String.format(&quot;[$CLASS$]&quot;);&#10;}" description="insert a toString template" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className(sClassName)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>